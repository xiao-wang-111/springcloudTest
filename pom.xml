<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.atguigu.springcloud</groupId>
  <artifactId>cloud2022</artifactId>
  <version>1.0</version>
  <modules>
    <module>cloud-provider-payment8001</module>
    <module>cloud-consumer-order80</module>
    <module>cloud-api-common</module>
      <module>cloud-eureka-server7001</module>
      <module>cloud-eureka-server7002</module>
      <module>cloud-provider-payment8002</module>
      <module>cloud-provider-payment8004</module>
      <module>cloud-consumerzk-order80</module>
      <module>cloud-providerConsul-payment8006</module>
      <module>cloud-consumer-feign-order80</module>
      <module>cloud-provider-Hystrix-payment8001</module>
      <module>cloud-consumer-feign-hystrix-order80</module>
      <module>cloud-gateway-service9527</module>
  </modules>
  <packaging>pom</packaging>


<!--    <module>cloud-consumer-order80</module>-->
<!--    <module>cloud-eureka-server7001</module>-->
<!--    <module>cloud-eureka-server7002</module>-->
<!--    <module>cloud-provider-payment8001</module>-->
<!--    <module>cloud-provider-payment8002</module>-->
<!--    <module>cloud-provider-payment8004</module>-->
<!--    <module>cloud-consumerzk-order80</module>-->
<!--    <module>cloud-providerconsul-payment8006</module>-->
<!--    <module>cloud-consumerconsul-order80</module>-->
<!--    <module>cloud-consumer-feign-order80</module>-->
<!--    <module>cloud-provider-hystrix-payment8001</module>-->
<!--    <module>cloud-consumer-feign-hystrix-order80</module>-->
<!--    <module>cloud-consumer-hystrix-dashboard9001</module>-->
<!--    <module>cloud-gateway-gateway9527</module>-->
<!--    <module>cloud-config-center-3344</module>-->
<!--    <module>cloud-config-client-3355</module>-->
<!--    <module>cloud-config-client-3366</module>-->
<!--    <module>cloud-stream-rabbitmq-provider8801</module>-->
<!--    <module>cloud-stream-rabbitmq-consumer8802</module>-->
<!--    <module>cloud-stream-rabbitmq-consumer8803</module>-->
<!--    <module>cloudalibaba-provider-payment9001</module>-->
<!--    <module>cloudalibaba-provider-payment9002</module>-->
<!--    <module>cloudalibaba-consumer-nacos-order83</module>-->
<!--    <module>cloudalibaba-config-nacos-client3377</module>-->
<!--    <module>cloudalibaba-sentinel-service8401</module>-->
<!--    <module>cloudalibaba-consumer-nacos-order84</module>-->
<!--    <module>cloudalibaba-provider-payment9003</module>-->
<!--    <module>cloudalibaba-provider-payment9004</module>-->
<!--    <module>seata-order-service2001</module>-->
<!--    <module>seata-storage-service2002</module>-->
<!--    <module>seata-account-service2003</module>-->

  <!-- 统一管理jar包版本 -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <junit.version>4.12</junit.version>
    <log4j.version>1.2.17</log4j.version>
    <lombok.version>1.16.18</lombok.version>
    <mysql.version>8.0.26</mysql.version>
    <druid.version>1.1.16</druid.version>
    <mybatis.spring.boot.version>1.3.0</mybatis.spring.boot.version>
  </properties>

  <!-- 子模块继承之后，提供作用：锁定版本+子modlue不用写groupId和version  -->
  <dependencyManagement>
    <dependencies>
      <!--spring boot 2.2.2-->
      <!-- 用于方便管理项目的依赖 -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>2.2.2.RELEASE</version>
        <!--pom表示将所有jar包打包成一个pom文件-->
        <type>pom</type>
        <!--让这些依赖分类并清晰地管理-->
        <scope>import</scope>
      </dependency>

      <!--spring cloud Hoxton.SR1-->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>Hoxton.SR1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!--spring cloud alibaba 2.1.0.RELEASE-->
      <dependency>
        <groupId>com.alibaba.cloud</groupId>
        <artifactId>spring-cloud-alibaba-dependencies</artifactId>
        <version>2.1.0.RELEASE</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql.version}</version>
      </dependency>

      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid</artifactId>
        <version>${druid.version}</version>
      </dependency>

      <!--链接springboot和mybatis,构建基于springboot的mybatis应用程序-->
      <dependency>
        <groupId>org.mybatis.spring.boot</groupId>
        <artifactId>mybatis-spring-boot-starter</artifactId>
        <version>${mybatis.spring.boot.version}</version>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
      </dependency>

      <!--记录日志-->
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${log4j.version}</version>
      </dependency>

      <!--通过注解，消除样板式代码-->
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <!--两个项目之间依赖不传递-->
        <optional>true</optional>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <!--能够将springboot应用打包为可执行的jar或war文件-->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>2.3.0.RELEASE</version>

        <configuration>
          <!--明确表示编译版本配置有效-->
          <fork>true</fork>
          <!--使用外部配置文件-->
          <addResources>true</addResources>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>

